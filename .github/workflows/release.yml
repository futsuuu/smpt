name: Release

on:
  push:
    tags:
      - "v*"

env:
  RUST_BACKTRACE: 1
  CARGO_TERM_COLOR: always
  PACKAGE_NAME: smpt

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - x86_64-pc-windows-msvc
          - x86_64-apple-darwin
        include:
          - target: x86_64-unknown-linux-musl
            os: ubuntu-latest
          - target: x86_64-pc-windows-msvc
            os: windows-latest
          - target: x86_64-apple-darwin
            os: macos-latest

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Rust
        run: |
          rustup update stable
          rustup default stable
          rustup target add ${{ matrix.target }}

      - name: Cache Rust toolchains
        uses: Swatinem/rust-cache@v2

      - name: Compile (Windows MSVC)
        if: matrix.target == 'x86_64-pc-windows-msvc'
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Install Zig
        if: matrix.target != 'x86_64-pc-windows-msvc'
        uses: goto-bus-stop/setup-zig@v2

      - name: Install cargo-binstall
        if: matrix.target != 'x86_64-pc-windows-msvc'
        uses: cargo-bins/cargo-binstall@main

      - name: Compile with cargo-zigbuild
        if: matrix.target != 'x86_64-pc-windows-msvc'
        run: |
          cargo binstall -y cargo-zigbuild
          cargo zigbuild --release --target ${{ matrix.target }}

      - name: Convert to zip
        if: ${{ !contains(matrix.target, 'windows') }}
        run: |
          mv ./target/${{ matrix.target }}/release/${{ env.PACKAGE_NAME }} ./${{ env.PACKAGE_NAME }}
          zip ./release.zip ./${{ env.PACKAGE_NAME }}

      - name: Convert to zip (Windows)
        if: ${{ contains(matrix.target, 'windows') }}
        shell: powershell
        run: |
          Move-Item ./target/${{ matrix.target }}/release/${{ env.PACKAGE_NAME }}.exe ./${{ env.PACKAGE_NAME }}.exe
          Compress-Archive -Path ./${{ env.PACKAGE_NAME }}.exe -DestinationPath ./release.zip

      - name: Save a release build
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.target }}
          path: ./release.zip

  publish:
    name: publish
    needs: build

    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: release-x86_64-unknown-linux-musl
          path: ${{ env.PACKAGE_NAME }}-x86_64-unknown-linux-musl
      - uses: actions/download-artifact@v3
        with:
          name: release-x86_64-apple-darwin
          path: ${{ env.PACKAGE_NAME }}-x86_64-apple-darwin
      - uses: actions/download-artifact@v3
        with:
          name: release-x86_64-pc-windows-msvc
          path: ${{ env.PACKAGE_NAME }}-x86_64-pc-windows-msvc

      - run: ls -al

      - name: Move files
        run: |
          for release_dir in * ;do
          mv ${release_dir}/release.zip ./${release_dir}.zip
          done

      - run: ls -al

      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: "*.zip"
          name: ${{ env.TAG }}
          token: ${{ secrets.GITHUB_TOKEN }}
